#+TITLE: Emacs Configuration
#+AUTHOR: Anton Pols
#+EMAIL: antonpols@gmail.com
#+OPTIONS: toc:nil num:nil

* Set Personal Information
#+BEGIN_SRC emacs-lisp
(setq user-full-name "Anton Pols"
      user-mail-address "antonpols@gmail.com")
#+END_SRC

* MELPA
** Add MELPA
#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)
#+END_SRC

** Install MELPA packages
#+BEGIN_SRC emacs-lisp
(when (not package-archive-contents)
  (package-refresh-contents))

(defvar my-packages
  '(auctex
    elpy
    exec-path-from-shell
    helm
    helm-projectile
    flycheck
    magit
    org
    org-bullets
    projectile
    pyvenv
    use-package
    sphinx-doc
    zenburn-theme) 
  "A list of packages to ensure are installed at launch.")

(dolist (p my-packages)
  (when (not (package-installed-p p))
    (package-install p)))
#+END_SRC

* Emacs Layout
#+BEGIN_SRC emacs-lisp
;; disable welcome screen, sound, menu and tool bar, enable line
;; numbering, replace selected text when copying/typing, enable spell
;; checker and load Zenburn theme
(setq inhibit-startup-screen t)
(setq initial-scratch-message nil)
(setq ring-bell-function 'ignore)
(menu-bar-mode -1) 
(tool-bar-mode -1)
(global-linum-mode t)
(delete-selection-mode 1)
(dolist (hook '(text-mode-hook))
  (add-hook hook (lambda () (flyspell-mode 1))))
(load-theme 'zenburn t)
(add-to-list 'default-frame-alist '(font . "Menlo-14"))
(set-face-attribute 'default t :font "Menlo-14")
#+END_SRC

* Helm
#+BEGIN_SRC emacs-lisp
(require 'helm-config)
(global-set-key (kbd "M-x") #'helm-M-x)
(global-set-key (kbd "C-x C-f") #'helm-find-files)
(global-set-key (kbd "M-y") 'helm-show-kill-ring)
(global-set-key (kbd "C-x b") 'helm-mini)
(helm-mode 1)
(helm-autoresize-mode t)
#+END_SRC

** Helm-projectile
#+BEGIN_SRC emacs-lisp
(projectile-global-mode)
(setq projectile-completion-system 'helm)
(setq projectile-switch-project-action 'helm-projectile)
(helm-projectile-on)
#+END_SRC

* Tex
#+BEGIN_SRC emacs-lisp
;; use xetex instead of tex
(setq-default TeX-engine 'xetex)
#+END_SRC

* Org mode
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook 'org-indent-mode)
(add-hook 'org-mode-hook 'visual-line-mode)
(setq org-latex-pdf-process
  (list "latexmk -shell-escape -bibtex -f -xelatex %f"))
#+END_SRC

** Org-bullets
#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC emacs-lisp

* Magit
#+BEGIN_SRC emacs-lisp
;; disable git integration Emacs
(setq vc-handled-backends nil)

(global-set-key (kbd "C-x g") 'magit-status)
(global-set-key (kbd "C-x M-g") 'magit-dispatch-popup)
#+END_SRC

* Elpy
#+BEGIN_SRC emacs-lisp
;; enable elpy, enable automatic project based virtual environment
;; switching, use ipython, flycheck and sphinx-doc
(elpy-enable)
(use-package pyvenv
	:ensure t
	:init
	(setenv "WORKON_HOME" "~/miniconda3/envs/")
	(pyvenv-mode 1)
	(pyvenv-tracking-mode 1))
(setq python-shell-interpreter "ipython"
      python-shell-interpreter-args "--simple-prompt -c exec('__import__(\\'readline\\')') -i")
(setq elpy-shell-starting-directory 'current-directory)
(when (require 'flycheck nil t)
  (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
  (add-hook 'elpy-mode-hook 'flycheck-mode))
(add-hook 'python-mode-hook (lambda ()
                              (require 'sphinx-doc)
                              (sphinx-doc-mode t)))
#+END_SRC

* OSX Stuff
#+BEGIN_SRC emacs-lisp
;; inherit environment variables from the shell, set function home
;; and end keys and set ispell location
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))
(global-set-key [home] 'move-beginning-of-line)
(global-set-key [end] 'move-end-of-line)
(setq ispell-program-name "/usr/local/bin/ispell")
#+END_SRC
